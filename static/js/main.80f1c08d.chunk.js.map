{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/Contacts/ContactsList.module.css","Components/Section/Section.module.css","Components/Filter/Filter.module.css","Components/Loader/Loader.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","Components/ContactForm/ContactForm.jsx","Components/Contacts/ContactsList.jsx","Components/Section/Section.jsx","Components/Filter/Filter.jsx","Components/Loader/Loader.jsx","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","dispatch","actions","get","then","data","catch","error","contact","post","id","delete","getAllContacts","state","contacts","items","getLoading","loading","getFilter","filter","getError","getVisibleContacts","createSelector","allContacts","normalizedFilter","toLowerCase","name","includes","ContactForm","number","nameInputId","uuidv4","numberInputId","handleInputChange","e","target","value","setState","handleSubmit","preventDefault","props","formSubmitHandler","find","item","toast","info","position","POSITION","TOP_CENTER","reset","this","onSubmit","className","styles","form","htmlFor","formLabel","formInput","type","placeholder","onChange","pattern","title","required","formBtn","Component","defaultProps","connect","contactsOperations","ContactList","fetchContacts","onDeleteContact","length","contactsList","map","listItem","Btn","onClick","Section","children","section","sectionTitle","searchInputId","Filter","filterLabel","filterInput","contactsActions","Spinner","spinnerContainer","color","height","width","timeout","App","isLoading","createReducer","_","payload","action","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80f1c08d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__26enc\",\"formLabel\":\"ContactForm_formLabel__2nY2g\",\"formInput\":\"ContactForm_formInput__2iiXa\",\"formBtn\":\"ContactForm_formBtn__3kGdG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactsList_contactsList__33bTs\",\"listItem\":\"ContactsList_listItem__2FiB6\",\"Btn\":\"ContactsList_Btn__3eDDd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2PkR_\",\"sectionTitle\":\"Section_sectionTitle__25wl9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__2bWgL\",\"filterInput\":\"Filter_filterInput__3F6sO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinnerContainer\":\"Loader_spinnerContainer__3kTPJ\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nconst fetchContactsError = createAction('contacts/fetchContactsError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport default {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactError,\n  addContactSuccess,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n};\n","import axios from 'axios';\nimport actions from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:4000';\n\nconst addContact = contact => dispatch => {\n  dispatch(actions.addContactRequest());\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\n    .catch(error => dispatch(actions.addContactError(error)));\n};\n\nconst deleteContact = id => dispatch => {\n  dispatch(actions.deleteContactRequest());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(actions.deleteContactSuccess(id)))\n    .catch(error => dispatch(actions.deleteContactError(error)));\n};\n\nconst fetchContacts = () => dispatch => {\n  dispatch(actions.fetchContactsRequest());\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(actions.fetchContactsSuccess(data)))\n    .catch(error => dispatch(actions.fetchContactsError(error)));\n};\n\nexport default { fetchContacts, addContact, deleteContact };\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getAllContacts = state => state.contacts.items;\n\nexport const getLoading = state => state.contacts.loading;\n\nexport const getFilter = state => state.contacts.filter;\n\n// export const getVisibleContacts = state => {\n//   const allContacts = getAllContacts(state);\n//   const filter = getFilter(state);\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return allContacts.filter(({ name}) =>\n//     name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\nexport const getError = state => state.contacts.error;\n\nexport const getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (allContacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return allContacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './ContactForm.module.css';\nimport { connect } from 'react-redux';\nimport contactsOperations from '../../redux/contacts/contacts-operations';\nimport { getAllContacts } from '../../redux/contacts/contacts-selectors';\nimport { ToastContainer, toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  handleInputChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name } = this.state;\n    const { items, formSubmitHandler } = this.props;\n\n    if (items.find(item => item.name === name)) {\n      return toast.info(`${name} is already in contacts.`, {\n        position: toast.POSITION.TOP_CENTER,\n      });\n    }\n\n    formSubmitHandler(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <label htmlFor={this.nameInputId} className={styles.formLabel}>\n          Name\n          <input\n            className={styles.formInput}\n            type=\"text\"\n            placeholder=\"Enter name\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleInputChange}\n            id={this.nameInputId}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n\n        <label htmlFor={this.numberInputId} className={styles.formLabel}>\n          Number\n          <input\n            className={styles.formInput}\n            type=\"tel\"\n            placeholder=\"Enter telephone number\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleInputChange}\n            id={this.numberInputId}\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className={styles.formBtn}>\n          Add contact\n        </button>\n        <ToastContainer />\n      </form>\n    );\n  }\n}\n\nContactForm.defaultProps = {\n  items: [],\n};\n\nContactForm.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape),\n  formSubmitHandler: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  items: getAllContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  formSubmitHandler: data => dispatch(contactsOperations.addContact(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport styles from './ContactsList.module.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport contactsOperations from '../../redux/contacts/contacts-operations';\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\nimport { Component } from 'react';\n\nclass ContactList extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    const { contacts, onDeleteContact } = this.props;\n    return contacts.length > 0 ? (\n      <ul className={styles.contactsList}>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id} className={styles.listItem}>\n            <p className=\"name\">\n              {name}: <span>{number}</span>\n            </p>\n            <button\n              className={styles.Btn}\n              type=\"button\"\n              onClick={() => onDeleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    ) : (\n      <h3>You haven't contacts</h3>\n    );\n  }\n}\n\nContactList.defaultProps = {\n  contacts: [],\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape),\n  onDeleteContact: PropTypes.func.isRequired,\n  fetchContacts: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsOperations.deleteContact(id)),\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <div className={styles.section}>\n    <h2 className={styles.sectionTitle}>{title}</h2>\n    {children}\n  </div>\n);\n\nSection.defaultProps = {\n  title: '',\n};\n\nSection.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import { v4 as uuidv4 } from 'uuid';\nimport styles from './Filter.module.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\n\nconst searchInputId = uuidv4();\nconst Filter = ({ value, onChange }) => (\n  <>\n    <label htmlFor={searchInputId} className={styles.filterLabel}>\n      Find contacts by name\n      <input\n        className={styles.filterInput}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n        id={searchInputId}\n      />\n    </label>\n  </>\n);\n\nFilter.defaultProps = {\n  value: '',\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: getFilter(state),\n});\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactsActions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport styles from './Loader.module.css';\n\nexport default class Spinner extends Component {\n  render() {\n    return (\n      <div className={styles.spinnerContainer}>\n        <Loader\n          type=\"ThreeDots\"\n          color=\"#00BFFF\"\n          height={80}\n          width={80}\n          timeout={3000}\n        />\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ContactForm from './Components/ContactForm';\nimport ContactList from './Components/Contacts/ContactsList';\nimport Section from './Components/Section';\nimport Filter from './Components/Filter';\nimport { getLoading, getError } from './redux/contacts/contacts-selectors';\nimport Spinner from './Components/Loader/Loader';\nimport { ToastContainer, toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    const { error } = this.props;\n\n    return (\n      <>\n        <div className=\"App\">\n          <Section title=\"Phonebook\">\n            <ContactForm />\n            {this.props.isLoading && <Spinner />}\n          </Section>\n\n          <Section title=\"Contacts\">\n            <Filter />\n            <ContactList />\n          </Section>\n\n          <ToastContainer />\n        </div>\n        {error &&\n          toast.error(`${error}`, { position: toast.POSITION.TOP_CENTER })}\n      </>\n    );\n  }\n}\n\nApp.defaultProps = {\n  error: null,\n  isLoading: false,\n};\n\nApp.propTypes = {\n  error: PropTypes.array,\n  isLoading: PropTypes.bool,\n};\n\nconst mapStateToProps = state => ({\n  isLoading: getLoading(state),\n  error: getError(state),\n});\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\nconst {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactError,\n  addContactSuccess,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} = actions;\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n\n  [addContactSuccess]: (state, action) => [...state, action.payload],\n  [deleteContactSuccess]: (state, action) =>\n    state.filter(contact => contact.id !== action.payload),\n});\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, action) => action.payload,\n});\n\nconst error = createReducer(null, {\n  [addContactError]: (state, action) => [...state, action.payload],\n  [deleteContactError]: (state, action) => [...state, action.payload],\n  [fetchContactsError]: (_, action) => [action.payload],\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contacts-reducer';\nimport logger from 'redux-logger';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\n// const contactsPersistConfig = {\n//   key: 'contacts',\n//   storage,\n//   blacklist: ['filter'],\n// };\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n});\n\n// const persistor = persistStore(store);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}